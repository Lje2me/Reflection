# An example I found using Pillow

# install pillow
sudo pip install Pillow
# load and show an image with Pillow
from PIL import Image
# load the image
image = Image.open('opera_house.jpg')
# summarize some details about the image
print(image.format)
print(image.mode)
print(image.size)
# show the image
image.show()
#this will print the format, colorspace(mode) and original size

# this is code on how to convert to black and white

from PIL import Image
# load the image
image = Image.open('opera_house.jpg')
# convert the image to grayscale
gs_image = image.convert(mode='L')
# save in jpeg format
gs_image.save('opera_house_grayscale.jpg')
# load the image again and show it
image2 = Image.open('opera_house_grayscale.jpg')
# show the image
image2.show()

#code I wrote out with my own image and a cropped version
#had to create a venv 
from PIL import Image
filename = "Ookmeet.jpg"
with Image.open(filename) as img:
    img.load()

type(img)


isinstance(img, Image.Image)

cropped_img = img.crop((300, 150, 700, 1000))

cropped_img.show()
img.show()

#created a mask for an image to then be pasted on another image
from PIL import Image
from PIL import ImageFilter
filename = "Ookmeet.jpg"
with Image.open(filename) as img:
    img.load()

type(img)


isinstance(img, Image.Image)
def erode(cycles, image):
    for _ in range(cycles):
        image = image.filter(ImageFilter.MinFilter(3))
    return image


def dilate(cycles, image):
    for _ in range(cycles):
        image = image.filter(ImageFilter.MaxFilter(3))
    return image

car_img = img.crop((200, 50, 1250, 750))
car_img_gray = car_img.convert("L")

threshold = 100
# anything light will be black, anything dark will be white for this dark image needing dark subject as mask
car_img_threshold = car_img_gray.point (lambda x: 0 if x > threshold else 255)
#expand and retract the area of white pixels erode will take away dilate will add
step_1 = erode(5, car_img_threshold)
step_2 = dilate(45, step_1)
car_mask= erode(40, step_2)
car_mask = car_mask.convert("L")
car_mask = car_mask.filter(ImageFilter.BoxBlur(20))
blank = car_img.point(lambda _:0)
car_seg = Image.composite(car_img, blank, car_mask)
car_seg.show()
